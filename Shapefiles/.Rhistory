addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = FALSE)
)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
rivers <- readOGR("./ne_10m_rivers_lake_centerlines")
plot(rivers)
leaflet(data = rivers) %>%
addProviderTiles("Esri.WorldTerrain", options = providerTileOptions(noWrap = TRUE)) %>%
addPolylines(color = "#63CBD3", popup = ~name_en)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties)
#Loading in my different layers
counties <- readOGR("SouthwestPACounties_Features.geojson")
resilient <- readOGR("SouthwestPAResilientNetwork_.geojson")
aml <- readOGR("AbandonedMineLands_FeaturesT.geojson")
industrialmines <- readOGR("SouthwestPAIndustrialMineral.geojson")
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties, popup = ~SITE_ID)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties, popup = ~NAME10)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = "counties", popup = ~NAME10)
leaflet() %>%
addPolylines(data = "counties", popup = ~NAME10)
leaflet() %>%
addPolylines(data = "counties", popup = ~NAME10) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = "counties", popup = ~NAME10) %>%
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = "counties", color = "#2A2D32") %>%
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = "counties", color = "#2A2D32")
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties, color = "#2A2D32")
leaflet() %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(counties, color = "#2A2D32")
leaflet(data = counties) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 12)
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 10)
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 4) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 10) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 10) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 7) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet(data = counties) %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines()
leaflet() %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties)
#Loading in my different layers
counties.load <- readOGR("./AbandonedMineLands.shp", layer = "AbandonedMineLands")
setwd("~/Documents/GitHub/hw3-clarissp/Shapefiles")
#Loading in my different layers
counties.load <- readOGR("./AbandonedMineLands.shp", layer = "AbandonedMineLands")
#Loading in my different layers
counties.load <- readOGR("shp/AbandonedMineLands.shp", layer = "AbandonedMineLands")
#Loading in my different layers
counties.load <- readOGR("SouthwestPACounties.shp", layer = "SouthwestPACounties")
#Loading in my different layers
counties.load <- readOGR("SouthwestPACounties.shp", layer = "SouthwestPACounties", GDAL1_integer64_policy = TRUE)
#Loading in my different layers
counties.load <- readOGR("shp/SouthwestPACounties.shp", layer = "SouthwestPACounties", GDAL1_integer64_policy = TRUE)
#Loading in my different layers
counties.load <- readOGR("SouthwestPACounties.shp", layer = "SouthwestPACounties", GDAL1_integer64_policy = TRUE)
#Loading in my different layers
counties <- readOGR("SouthwestPACounties_Features.geojson")
resilient <- readOGR("SouthwestPAResilientNetwork_.geojson")
aml <- readOGR("AbandonedMineLands_FeaturesT.geojson")
industrialmines <- readOGR("SouthwestPAIndustrialMineral.geojson")
counties <- st_read("SouthwestPACounties_Features.geojson")
install.packages("sf")
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(sf)
require(dplyr)
require(readxl)
require(stringr)
install.packages("rjson")
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(sf)
require(rjson)
require(dplyr)
require(readxl)
require(stringr)
counties <- readOGR("SouthwestPACounties.shp")
counties <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPACounties.shp")
plot(counties)
counties <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPACounties.shp", layer = "SouthwestPACounties")
plot(counties)
#Loading in my different layers
resilient <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAResilientNetwork.shp")
plot(resilient)
#aml <- readOGR("AbandonedMineLands_FeaturesT.geojson")
#industrialmines <- readOGR("SouthwestPAIndustrialMineral.geojson")
#Loading in my different layers
resilient <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAResilientNetwork.shp", layer = "SouthwestPAResilientNetwork")
plot(resilient)
#aml <- readOGR("AbandonedMineLands_FeaturesT.geojson")
#industrialmines <- readOGR("SouthwestPAIndustrialMineral.geojson")
aml <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/AbandonedMineLands.shp", layer = "AbandonedMineLands")
plot(aml)
#industrialmines <- readOGR("SouthwestPAIndustrialMineral.geojson")
mines <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAIndustrialMineral.shp", layer = "SouthwestPAIndustrialMineral")
mines <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAIndustrialMineralMining.shp", layer = "SouthwestPAIndustrialMineral")
mines <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAIndustrialMineralMining.shp", layer = "SouthwestPAIndustrialMineralMining")
plot(mines)
leaflet() %>% setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
addPolylines(data = counties)
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %<%
addPolylines(data = counties, popup = ~NAMELSAD10) %>%
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addPolylines(data = counties, popup = ~NAMELSAD10) %>%
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
#setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
#setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %>%
#addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
) %>%
#addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
#addPolylines(data = counties, popup = ~NAMELSAD10)
leaflet() %>%
addPolylines(data = counties, popup = ~NAMELSAD10) %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet() %>%
addPolylines(data = counties) %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
#Loading in my different layers
counties <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPACounties.shp", layer = "SouthwestPACounties")
plot(counties)
tnc <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAResilientNetwork.shp", layer = "SouthwestPAResilientNetwork")
aml <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/AbandonedMineLands.shp", layer = "AbandonedMineLands")
mines <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAIndustrialMineralMining.shp", layer = "SouthwestPAIndustrialMineralMining")
leaflet() %>%
addPolylines(data = counties) %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet() %>%
addPolylines(data = counties)
leaflet() %>%
addPolygons(data = counties)
leaflet() %>%
addPolygons(data = counties) %>%
setView(lng = -79.995575, lat = 40.4406763, zoom = 8) %>%
#Basemaps that users can choose from
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
#Allows users to choose which basemap
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
leaflet() %>%
addPolygons(data = counties)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
#Loading in my different layers
county <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPACounties.shp", layer = "SouthwestPACounties")
tnc <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAResilientNetwork.shp", layer = "SouthwestPAResilientNetwork")
aml <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/AbandonedMineLands.shp", layer = "AbandonedMineLands")
mines <- readOGR("/Users/Clarissa/Documents/GitHub/hw3-clarissp/Shapefiles/SouthwestPAIndustrialMineralMining.shp", layer = "SouthwestPAIndustrialMineralMining")
county@data
leaflet(data = county) %>%
addPolygons()
leaflet() %>%
addPolygons(data = tnc)
leaflet() %>%
addPolygons(data = county)
leaflet() %>%
addPolylines(data = county)
leaflet() %>%
addmarkers(data = county)
leaflet() %>%
addMarkers(data = county)
leaflet() %>%
addMarkers(data = county)
